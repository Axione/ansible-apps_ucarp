---
- name: "Check for ucarp binary"
  stat:
    path: "/usr/sbin/ucarp"
  changed_when: false
  register: ucarp_binary

- when: not ucarp_binary.stat.exists
  block:
    # Special taks for debian-11
    - include_tasks: setup-Debian-11.yml
      when: ansible_distribution_release == "bullseye"

    - name: "Install ucarp"
      package:
        name: "ucarp"
        state: present
      when: ansible_distribution_release == "buster"

    - name: "Install iputils-arping"
      package:
        name: "iputils-arping"
        state: present

    - name: "Create config directory"
      file:
        path: /etc/ucarp/
        state: directory
        mode: '0755'

- name: "Create init file for ucarp"
  template:
    src: "ucarp.service.j2"
    dest: "/etc/systemd/system/ucarp-{{ item.name }}.service"
    mode: '0644'
  register: init
  with_items:
    - "{{ ucarp_config }}"
  notify:
    - "restart ucarp"

- name: "Copy up scripts"
  template:
    src: "vip-up.sh.j2"
    dest: "/etc/ucarp/{{ item.name }}-up.sh"
    mode: '0755'
  register: upscript
  with_items:
    - "{{ ucarp_config }}"
  notify:
    - restart ucarp

- name: "Copy down scripts"
  template:
    src: "vip-down.sh.j2"
    dest: "/etc/ucarp/{{ item.name }}-down.sh"
    mode: '0755'
  register: downscript
  with_items:
    - "{{ ucarp_config }}"
  notify:
    - restart ucarp

- name: "Enable ucarp service"
  service:
    name: "ucarp-{{ item.name }}"
    enabled: true
    state: started
    daemon_reload: true
  with_items:
    - "{{ ucarp_config }}"

- name: "Remember which services need to restart"
  set_fact:
    restart_services: "{{ restart_services | default([]) + [item.item.name] }}"
  no_log: true
  when: item.changed
  with_items:
    - "{{ init.results }}"
    - "{{ upscript.results }}"
    - "{{ downscript.results }}"

#- debug:
#    var: restart_services
