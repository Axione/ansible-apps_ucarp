---
- name: "Check for ucarp binary"
  ansible.builtin.stat:
    path: "/usr/sbin/ucarp"
  changed_when: false
  register: ucarp_binary

- name: "Install tasks"
  when: not ucarp_binary.stat.exists
  block:
    # Special taks for debian-11
    - include_tasks: setup-Debian-11.yml
      when: ansible_distribution_release == "bullseye"

    - name: "Install ucarp"
      ansible.builtin.package:
        name: "ucarp"
        state: present
      when: ansible_distribution_release != "bulleyes"

    - name: "Install net packages"
      ansible.builtin.package:
        name: "{{ ucarp_pkgs }}"
        state: present

    - name: "Create config directory"
      ansible.builtin.file:
        path: /etc/ucarp/
        state: directory
        mode: '0755'

- name: "Configs tasks"
  when: ucarp_config is defined and ucarp_config |length > 0
  block:
    - name: "Create init file for ucarp"
      ansible.builtin.template:
        src: "ucarp.service.j2"
        dest: "/etc/systemd/system/ucarp-{{ item.name }}.service"
        mode: '0644'
      no_log: "{{ ucarp_nolog }}"
      register: init
      with_items:
        - "{{ ucarp_config }}"
      notify:
        - "restart ucarp"

    - name: "Copy up scripts"
      ansible.builtin.template:
        src: "vip-up.sh.j2"
        dest: "/etc/ucarp/{{ item.name }}-up.sh"
        mode: '0755'
      no_log: "{{ ucarp_nolog }}"
      register: upscript
      with_items:
        - "{{ ucarp_config }}"
      notify:
        - restart ucarp

    - name: "Copy down scripts"
      ansible.builtin.template:
        src: "vip-down.sh.j2"
        dest: "/etc/ucarp/{{ item.name }}-down.sh"
        mode: '0755'
      no_log: "{{ ucarp_nolog }}"
      register: downscript
      with_items:
        - "{{ ucarp_config }}"
      notify:
        - restart ucarp

    - name: "Enable ucarp service"
      ansible.builtin.service:
        name: "ucarp-{{ item.name }}"
        enabled: true
        state: started
        daemon_reload: true
      no_log: "{{ ucarp_nolog }}"
      with_items:
        - "{{ ucarp_config }}"

    - name: "Remember which services need to restart"
      ansible.builtin.set_fact:
        restart_services: "{{ restart_services | default([]) + [item.item.name] }}"
      no_log: "{{ ucarp_nolog }}"
      when: item.changed
      with_items:
        - "{{ init.results }}"
        - "{{ upscript.results }}"
        - "{{ downscript.results }}"

#- debug:
#    var: restart_services
